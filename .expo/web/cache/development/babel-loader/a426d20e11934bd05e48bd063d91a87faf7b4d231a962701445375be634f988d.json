{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TodoItem from \"../Components/TodoItem\";\nimport { SessionContext } from \"../Context/Context\";\nimport { deleteTodoList, getTodoLists, getTodos, deleteTodo, updateTodo, createTodo } from \"../utils/api\";\nimport Navbar from \"../Components/Navbar\";\nimport { ArrowLeftCircle, Trash2, Trash } from \"react-native-feather\";\nimport TodoListsScreen from \"./TodoListsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TasksScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useContext = useContext(SessionContext),\n    _useContext2 = _slicedToArray(_useContext, 2),\n    session = _useContext2[0],\n    setSession = _useContext2[1];\n  var _route$params = route.params,\n    id = _route$params.id,\n    title = _route$params.title,\n    username = _route$params.username,\n    onDeleteTodoList = _route$params.onDeleteTodoList;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    todoData = _useState2[0],\n    setTodoData = _useState2[1];\n  var _useState3 = useState(todoData),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filterTodoData = _useState4[0],\n    setFilterTodoData = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    todoItem = _useState6[0],\n    setTodoItem = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    countPercent = _useState10[0],\n    setCountPercent = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    count = _useState12[0],\n    setCount = _useState12[1];\n  useEffect(function () {\n    retrieveTodos();\n  }, []);\n  useEffect(function () {\n    setCount(todoData.filter(function (todo) {\n      return todo.done;\n    }).length);\n  }, [todoData]);\n  useEffect(function () {\n    setCountPercent(todoData.filter(function (todo) {\n      return todo.done;\n    }).length / todoData.length * 100);\n  }, [todoData]);\n  function onCreateTodo() {\n    if (todoItem.length == 0) {\n      setError(\"Veuillez mettre un titre valide!\");\n    } else {\n      createTodo(todoItem, id, session.token).then(function (todoItem) {\n        var newTodoItems = [].concat(_toConsumableArray(todoData), [todoItem]);\n        setTodoData(newTodoItems);\n        setCountPercent(newTodoItems.filter(function (item) {\n          return item.done;\n        }).length / newTodoItems.length * 100);\n        retrieveTodos();\n        setTodoItem(\"\");\n        setError(\"\");\n      }).catch(function (err) {\n        return console.log(err.message);\n      });\n    }\n  }\n  function onUpdateTodoItem(id, state) {\n    updateTodo(id, state, session.token).then(function (res) {\n      retrieveTodos();\n    }).catch(function (err) {\n      return console.log(err.message);\n    });\n  }\n  function onDeleteTodo(id) {\n    deleteTodo(id, session.token).then(function (res) {\n      var newTodoItems = todoData.filter(function (item) {\n        return item.id !== id;\n      });\n      setTodoData(newTodoItems);\n      setCountPercent(newTodoItems.filter(function (item) {\n        return item.done;\n      }).length / newTodoItems.length * 100);\n      retrieveTodos();\n      setTodoItem(\"\");\n    }).catch(function (err) {\n      return console.log(err.message);\n    });\n  }\n  function retrieveTodos() {\n    getTodos(id, session.token).then(function (res) {\n      setTodoData(res);\n      var completedTasks = res.filter(function (item) {\n        return item.done;\n      }).length;\n      setCount(completedTasks);\n      setCountPercent(completedTasks / res.length * 100);\n    }).catch(function (err) {\n      return console.log(err.message);\n    });\n  }\n  function onCheckNone() {\n    var cpy = _toConsumableArray(todoData);\n    cpy.forEach(function (item) {\n      onUpdateTodoItem(item.id, false);\n    });\n  }\n  function onCheckAll() {\n    var cpy = _toConsumableArray(todoData);\n    cpy.forEach(function (item) {\n      onUpdateTodoItem(item.id, true);\n    });\n  }\n  function showOngoing() {\n    var cpy = _toConsumableArray(todoData);\n    cpy = cpy.filter(function (item) {\n      return !item.done;\n    });\n    setTodoData(cpy);\n  }\n  function showChecked() {\n    var cpy = _toConsumableArray(todoData);\n    cpy = cpy.filter(function (item) {\n      return item.done;\n    });\n    setTodoData(cpy);\n  }\n  return _jsxs(ImageBackground, {\n    source: require(\"../assets/bg.jpg\"),\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [_jsx(Navbar, {\n      navigation: navigation\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.card,\n        children: [_jsxs(View, {\n          style: styles.head,\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              navigation.navigate(\"Todolists\", {\n                screen: \"Todolist\"\n              });\n            },\n            children: _jsx(ArrowLeftCircle, {\n              stroke: \"black\",\n              fill: \"#fff\",\n              width: 32,\n              height: 32\n            })\n          }), _jsx(Text, {\n            style: styles.header,\n            children: title\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              onDeleteTodoList(id);\n              navigation.navigate(\"Todolists\", {\n                screen: \"Todolist\"\n              });\n            },\n            children: _jsx(Trash2, {\n              stroke: \"red\",\n              fill: \"#fff\",\n              width: 25,\n              height: 25\n            })\n          })]\n        }), _jsxs(View, {\n          styles: styles.itemList,\n          children: [_jsx(View, {\n            style: styles.actionOptionsContainer,\n            children: _jsxs(View, {\n              style: styles.actionContainer,\n              children: [_jsx(View, {\n                style: styles.btnOption,\n                children: _jsx(Button, {\n                  title: \"Tout cocher\",\n                  onPress: onCheckAll\n                })\n              }), _jsx(View, {\n                style: styles.btnOption,\n                children: _jsx(Button, {\n                  title: \"Tout d\\xE9cocher\",\n                  onPress: onCheckNone\n                })\n              }), _jsx(View, {\n                style: styles.btnOption,\n                children: _jsx(Button, {\n                  title: \"Afficher tout(\" + count + \")\",\n                  onPress: retrieveTodos\n                })\n              }), _jsx(View, {\n                style: styles.btnOption,\n                children: _jsx(Button, {\n                  title: \"Afficher fait\",\n                  onPress: showOngoing\n                })\n              }), _jsx(View, {\n                style: styles.btnOption,\n                children: _jsx(Button, {\n                  title: \"Afficher non fait\",\n                  onPress: showChecked\n                })\n              })]\n            })\n          }), _jsx(View, {\n            style: styles.listContainer,\n            children: todoData != [] ? _jsx(FlatList, {\n              data: todoData,\n              renderItem: function renderItem(_ref2) {\n                var item = _ref2.item;\n                return _jsx(TodoItem, {\n                  item: item,\n                  onDeleteTodo: onDeleteTodo,\n                  onUpdateTodoItem: onUpdateTodoItem,\n                  navigation: navigation\n                });\n              }\n            }) : _jsx(Text, {\n              style: styles.description,\n              children: \"Liste de t\\xE2ches vide\"\n            })\n          }), _jsxs(View, {\n            style: styles.addItemContainer,\n            children: [_jsx(TextInput, {\n              style: styles.input,\n              value: todoItem,\n              placeholder: \"Ajouter une nouvelle t\\xE2che\",\n              onChangeText: function onChangeText(value) {\n                setTodoItem(value);\n              }\n            }), _jsx(View, {\n              style: styles.btnAdd,\n              children: _jsx(Button, {\n                title: \"Ajouter\",\n                onPress: onCreateTodo\n              })\n            }), _jsx(Text, {\n              style: {\n                color: \"red\",\n                marginVertical: 10\n              },\n              children: error\n            })]\n          })]\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"vertical\"\n  },\n  head: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  descriptionContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20\n  },\n  description: {\n    fontSize: 20\n  },\n  listContainer: {\n    paddingVertical: 30\n  },\n  addItemContainer: {\n    marginTop: 20,\n    flexDirection: \"row\",\n    display: \"flex\"\n  },\n  input: {\n    padding: 10,\n    fontSize: 16,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 4,\n    marginRight: 5,\n    flex: 1\n  },\n  optionContainer: {\n    flexDirection: \"row\",\n    flex: 0.2\n  },\n  actionContainer: {\n    flexDirection: \"row\"\n  },\n  btnOption: {\n    marginHorizontal: 5\n  },\n  btnAdd: {\n    marginHorizontal: 5,\n    marginTop: 2.5\n  },\n  buttons1: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    marginBottom: 20,\n    marginTop: 20,\n    width: \"60%\"\n  },\n  buttons2: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    marginBottom: 20,\n    marginTop: 20,\n    width: \"60%\"\n  },\n  card: {\n    width: \"50%\",\n    minHeight: \"80%\",\n    backgroundColor: \"white\",\n    paddingVertical: 30,\n    paddingHorizontal: 30,\n    textAlign: \"center\",\n    borderRadius: 10,\n    marginTop: 60\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: \"600\",\n    marginVertical: 15,\n    marginLeft: 20\n  },\n  actionOptionsContainer: {\n    flexDirection: \"row\",\n    marginTop: 25\n  },\n  itemList: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 1000,\n    borderColor: \"red\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useContext","TouchableOpacity","View","Text","TextInput","ImageBackground","StyleSheet","Button","FlatList","TodoItem","SessionContext","deleteTodoList","getTodoLists","getTodos","deleteTodo","updateTodo","createTodo","Navbar","ArrowLeftCircle","Trash2","Trash","TodoListsScreen","jsx","_jsx","jsxs","_jsxs","TasksScreen","_ref","route","navigation","_useContext","_useContext2","_slicedToArray","session","setSession","_route$params","params","id","title","username","onDeleteTodoList","_useState","_useState2","todoData","setTodoData","_useState3","_useState4","filterTodoData","setFilterTodoData","_useState5","_useState6","todoItem","setTodoItem","_useState7","_useState8","error","setError","_useState9","_useState10","countPercent","setCountPercent","_useState11","_useState12","count","setCount","retrieveTodos","filter","todo","done","length","onCreateTodo","token","then","newTodoItems","concat","_toConsumableArray","item","catch","err","console","log","message","onUpdateTodoItem","state","res","onDeleteTodo","completedTasks","onCheckNone","cpy","forEach","onCheckAll","showOngoing","showChecked","source","require","style","width","height","children","styles","container","card","head","onPress","navigate","screen","stroke","fill","header","itemList","actionOptionsContainer","actionContainer","btnOption","listContainer","data","renderItem","_ref2","description","addItemContainer","input","value","placeholder","onChangeText","btnAdd","color","marginVertical","create","flex","justifyContent","alignItems","flexDirection","descriptionContainer","display","padding","fontSize","paddingVertical","marginTop","borderWidth","borderColor","borderRadius","marginRight","optionContainer","marginHorizontal","buttons1","backgroundColor","marginBottom","buttons2","minHeight","paddingHorizontal","textAlign","fontWeight","marginLeft"],"sources":["/home/21901741/Documents/blank_sans_md/Screen/TasksScreen.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { TouchableOpacity } from \"react-native-web\";\n\nimport {\n  View,\n  Text,\n  TextInput,\n  ImageBackground,\n  StyleSheet,\n  Button,\n  FlatList,\n} from \"react-native\";\nimport TodoItem from \"../Components/TodoItem\";\nimport { SessionContext } from \"../Context/Context\";\nimport { deleteTodoList, getTodoLists, getTodos, deleteTodo, updateTodo, createTodo } from \"../utils/api\";\nimport Navbar from \"../Components/Navbar\";\nimport { ArrowLeftCircle, Trash2, Trash } from \"react-native-feather\";\nimport TodoListsScreen from \"./TodoListsScreen\";\n\nexport default function TasksScreen({ route, navigation }) {\n  const [session, setSession] = useContext(SessionContext);\n\n  const { id, title, username, onDeleteTodoList } = route.params;\n  const [todoData, setTodoData] = useState([]);\n  const [filterTodoData, setFilterTodoData] = useState(todoData);\n  const [todoItem, setTodoItem] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [countPercent, setCountPercent] = useState(0);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    retrieveTodos();\n  }, []);\n\n\n  //Mettre à jour le nombre de tâches réalisées\n  useEffect(() => {\n    setCount(todoData.filter((todo) => todo.done).length);\n}, [todoData]);\n\n// Mettre à jour le nombre de tâches réalisées avec progress bar\nuseEffect(() => {\n    setCountPercent((todoData.filter((todo) => todo.done).length / todoData.length) * 100);\n}, [todoData]);\n\n \n\n  function onCreateTodo() {\n    if (todoItem.length == 0) {\n      setError(\"Veuillez mettre un titre valide!\");\n    } else {\n      createTodo(todoItem, id, session.token)\n        .then((todoItem) => {\n          const newTodoItems = [...todoData, todoItem];\n                    setTodoData(newTodoItems);\n                    setCountPercent((newTodoItems.filter((item) => item.done).length / newTodoItems.length) * 100);\n                    \n          retrieveTodos();\n          setTodoItem(\"\");\n          setError(\"\");\n        })\n        .catch((err) => console.log(err.message));\n    }\n  }\n\n  function onUpdateTodoItem(id, state) {\n    updateTodo(id, state, session.token)\n      .then((res) => {\n        retrieveTodos();\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  function onDeleteTodo(id) {\n    deleteTodo(id, session.token)\n      .then((res) => {\n\n        const newTodoItems = todoData.filter((item) => item.id !== id);\n                setTodoData(newTodoItems);\n                setCountPercent((newTodoItems.filter((item) => item.done).length / newTodoItems.length) * 100);\n\n        retrieveTodos();\n        setTodoItem(\"\");\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  function retrieveTodos() {\n    getTodos(id, session.token)\n        .then((res) => {\n            setTodoData(res);\n            \n            const completedTasks = res.filter((item) => item.done).length;\n            setCount(completedTasks);\n            setCountPercent((completedTasks / res.length) * 100);\n        })\n        .catch((err) => console.log(err.message));\n}\n\n\n  function onCheckNone() {\n    let cpy = [...todoData];\n    cpy.forEach((item) => {\n      onUpdateTodoItem(item.id, false);\n    });\n  }\n\n  function onCheckAll() {\n    let cpy = [...todoData];\n    cpy.forEach((item) => {\n      onUpdateTodoItem(item.id, true);\n    });\n  }\n\n  function showOngoing() {\n    let cpy = [...todoData];\n    cpy = cpy.filter((item) => !item.done);\n\n    setTodoData(cpy);\n  }\n\n  function showChecked() {\n    let cpy = [...todoData];\n    cpy = cpy.filter((item) => item.done);\n\n    setTodoData(cpy);\n  }\n\n  return (\n    <ImageBackground\n      source={require(\"../assets/bg.jpg\")}\n      style={{ width: \"100%\", height: \"100%\" }}\n    >\n      <Navbar navigation={navigation}/>\n      <View style={styles.container}>\n\n        <View style={styles.card}>\n          <View style={styles.head}>\n            <TouchableOpacity\n            onPress={() => {\n              navigation.navigate(\"Todolists\", {\n                screen: \"Todolist\",\n              });\n            }}>\n              <ArrowLeftCircle stroke=\"black\" fill=\"#fff\" width={32} height={32} />\n            </TouchableOpacity>\n            <Text style={styles.header}>{title}</Text>\n            <TouchableOpacity\n            onPress={() => {onDeleteTodoList(id);  navigation.navigate(\"Todolists\", {\n              screen: \"Todolist\",\n            });}}>\n              <Trash2 stroke=\"red\" fill=\"#fff\" width={25} height={25} />\n            </TouchableOpacity>\n          </View>\n        \n            {/* <View style={styles.progressBar}>\n                <View style={[styles.progressBarStyle, { width: `${countPercent}%`}]}>\n                    <Text style={styles.progressBarText}>\n                        {`${countPercent}% `}\n                    </Text>\n                </View>\n            </View> */}\n        <View styles={styles.itemList}>\n          <View style={styles.actionOptionsContainer}>\n            \n            <View style={styles.actionContainer}>\n              <View style={styles.btnOption}>\n                  <Button title=\"Tout cocher\" onPress={onCheckAll} />\n              </View>\n              <View style={styles.btnOption}>\n                  <Button title=\"Tout décocher\" onPress={onCheckNone} />\n              </View>\n              <View style={styles.btnOption}>\n                <Button title={\"Afficher tout(\" + count + \")\"} onPress={retrieveTodos} />\n              </View>\n              <View style={styles.btnOption}>\n                <Button title=\"Afficher fait\" onPress={showOngoing} />\n              </View>\n              <View style={styles.btnOption}>\n                <Button title=\"Afficher non fait\" onPress={showChecked} />\n              </View>\n            </View>\n\n          </View>\n\n          <View style={styles.listContainer}>\n            {todoData != [] ? (\n              <FlatList\n                data={todoData}\n                renderItem={({ item }) => (\n                  <TodoItem\n                    item={item}\n                    onDeleteTodo={onDeleteTodo}\n                    onUpdateTodoItem={onUpdateTodoItem}\n                    navigation={navigation}\n                  />\n                )}\n              />\n            ) : (\n              <Text style={styles.description}>Liste de tâches vide</Text>\n            )}\n          </View>\n          <View style={styles.addItemContainer}>\n            <TextInput\n                style={styles.input}\n                value={todoItem}\n                placeholder = \"Ajouter une nouvelle tâche\" \n                onChangeText={(value) => {\n                  setTodoItem(value);\n                }}\n              />\n            <View style={styles.btnAdd}>\n                  <Button title=\"Ajouter\" onPress={onCreateTodo} />\n            </View>\n            <Text style={{ color: \"red\", marginVertical: 10 }}>{error}</Text>\n          </View>\n        </View>\n        \n        </View>\n      </View>\n    </ImageBackground>\n      \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"vertical\"\n  },\n\n  head: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n\n  descriptionContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n  },\n\n  description: {\n    fontSize: 20,\n  },\n\n  listContainer: {\n    paddingVertical: 30,\n  },\n\n  addItemContainer: {\n    marginTop: 20,\n    flexDirection: \"row\",\n    display: \"flex\",\n  },\n\n  input: {\n    padding: 10,\n    fontSize: 16,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 4,\n    marginRight: 5,\n    flex: 1\n  },\n\n  optionContainer: {\n    flexDirection: \"row\",\n    flex: 0.2\n  },\n\n  actionContainer: {\n    flexDirection: \"row\",\n  },\n\n  btnOption: {\n    marginHorizontal: 5,\n  },\n\n  btnAdd: {\n    marginHorizontal: 5,\n    marginTop: 2.5\n  },\n\n  buttons1: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        marginBottom: 20,\n        marginTop: 20,\n        width: \"60%\",\n    },\n\n    buttons2: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        marginBottom: 20,\n        marginTop: 20,\n        width: \"60%\",\n    },\n    card: {\n      width: \"50%\",\n      minHeight: \"80%\",\n      backgroundColor: \"white\",\n      paddingVertical: 30,\n      paddingHorizontal: 30,\n      textAlign: \"center\",\n      borderRadius: 10,\n      marginTop: 60\n    },\n\n    header: {\n      fontSize: 30,\n      fontWeight: \"600\",\n      marginVertical: 15,\n      marginLeft:20\n    },\n\n    actionOptionsContainer: {\n      flexDirection: \"row\",\n      marginTop: 25,\n    },\n\n    itemList: {\n      display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n      borderWidth: 1000,\n      borderColor: \"red\"\n    }\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}