{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { getTodoLists, deleteTodoList, createTodoList } from \"../utils/api\";\nimport { SessionContext, TodoListsContext } from \"../Context/Context\";\nimport TodoList from \"../Components/TodoList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Navbar from \"../Components/Navbar\";\nimport { useFocusEffect, useIsFocused } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoListsScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useContext = useContext(SessionContext),\n    _useContext2 = _slicedToArray(_useContext, 2),\n    session = _useContext2[0],\n    setSession = _useContext2[1];\n  var _useContext3 = useContext(TodoListsContext),\n    _useContext4 = _slicedToArray(_useContext3, 2),\n    todoLists = _useContext4[0],\n    setTodoLists = _useContext4[1];\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    list = _useState2[0],\n    setList = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    todoList = _useState4[0],\n    setTodoList = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {\n    if (isFocused) {\n      console.log('TodoListsScreen est maintenant en focus et doit être rafraîchi');\n    }\n  }, [isFocused]);\n  useEffect(function () {\n    retrieveTodoList();\n  }, []);\n  function retrieveTodoList() {\n    getTodoLists(session.username, session.token).then(function (res) {\n      setTodoLists(res);\n      setList(res);\n    }).catch(function (err) {\n      return console.log(err.message);\n    });\n  }\n  function onDeleteTodoList(id) {\n    deleteTodoList(id, session.token).then(function (res) {\n      retrieveTodoList();\n    }).catch(function (err) {\n      return console.log(err.message);\n    });\n  }\n  function onCreateTodoList() {\n    if (todoList.length == 0) {\n      setError(\"Veuillez mettre un titre valide!\");\n    } else {\n      setError(\"\");\n      createTodoList(session.username, todoList, session.token).then(function (res) {\n        retrieveTodoList();\n        setTodoList(\"\");\n        setError(\"\");\n      }).catch(function (err) {\n        return console.log(err.message);\n      });\n    }\n  }\n  return _jsxs(ImageBackground, {\n    source: require(\"../assets/bg.jpg\"),\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [_jsx(Navbar, {\n      navigation: navigation\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.addItemContainer,\n        children: [_jsxs(View, {\n          style: styles.inputGroup,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            value: todoList,\n            placeholder: \"Entrer une nouvelle liste\",\n            onChangeText: function onChangeText(value) {\n              setTodoList(value);\n            }\n          }), _jsx(Button, {\n            title: \"AJOUTER\",\n            style: styles.buttonAdd,\n            onPress: onCreateTodoList\n          })]\n        }), _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: error\n        })]\n      }), _jsx(View, {\n        style: styles.descriptionContainer,\n        children: list != [] ? _jsx(FlatList, {\n          style: {\n            paddingLeft: 10\n          },\n          data: todoLists,\n          horizontal: true,\n          contentContainerStyle: styles.listContents,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(TodoList, {\n              todoList: item,\n              onDeleteTodoList: onDeleteTodoList,\n              navigationProp: navigation\n            });\n          }\n        }) : _jsx(Text, {\n          style: styles.description,\n          children: \"Liste de t\\xE2ches vide\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  descriptionContainer: {\n    display: \"flex\"\n  },\n  description: {\n    fontSize: 20\n  },\n  addItemContainer: {\n    padding: 30,\n    width: \"100%\"\n  },\n  inputGroup: {\n    width: \"100%\",\n    flexDirection: \"row\"\n  },\n  input: {\n    flex: 0.8,\n    padding: 10,\n    fontSize: 16,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    marginRight: 5\n  },\n  listContents: {\n    flexDirection: 'row',\n    width: '100%',\n    flexWrap: 'wrap'\n  },\n  buttonAdd: {}\n});","map":{"version":3,"names":["React","useEffect","useState","useContext","View","Text","TextInput","Pressable","ImageBackground","StyleSheet","FlatList","getTodoLists","deleteTodoList","createTodoList","SessionContext","TodoListsContext","TodoList","Button","Navbar","useFocusEffect","useIsFocused","jsx","_jsx","jsxs","_jsxs","TodoListsScreen","_ref","navigation","route","_useContext","_useContext2","_slicedToArray","session","setSession","_useContext3","_useContext4","todoLists","setTodoLists","_useState","_useState2","list","setList","_useState3","_useState4","todoList","setTodoList","_useState5","_useState6","error","setError","isFocused","console","log","retrieveTodoList","username","token","then","res","catch","err","message","onDeleteTodoList","id","onCreateTodoList","length","source","require","style","width","height","children","styles","container","addItemContainer","inputGroup","input","value","placeholder","onChangeText","title","buttonAdd","onPress","color","descriptionContainer","paddingLeft","data","horizontal","contentContainerStyle","listContents","renderItem","_ref2","item","navigationProp","description","create","flex","padding","display","fontSize","flexDirection","borderWidth","borderColor","borderRadius","backgroundColor","marginRight","flexWrap"],"sources":["/home/21901741/Documents/blank_sans_md/Screen/TodoListsScreen.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  ImageBackground,\n  StyleSheet,\n  FlatList,\n} from \"react-native\";\nimport { getTodoLists, deleteTodoList, createTodoList } from \"../utils/api\";\nimport { SessionContext, TodoListsContext } from \"../Context/Context\";\nimport TodoList from \"../Components/TodoList\";\nimport { Button } from \"react-native\";\nimport Navbar from \"../Components/Navbar\";\nimport { useFocusEffect, useIsFocused } from '@react-navigation/native';\n\nexport default function TodoListsScreen({ navigation, route }) {\n  const [session, setSession] = useContext(SessionContext);\n  const [todoLists, setTodoLists] = useContext(TodoListsContext);\n  const [list, setList] = useState([]);\n  const [todoList, setTodoList] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const isFocused = useIsFocused();\n\n  useEffect(() => {\n    if (isFocused) {\n      // Mettre ici le code de rafraîchissement du composant\n      console.log('TodoListsScreen est maintenant en focus et doit être rafraîchi');\n    }\n  }, [isFocused]);\n\n  useEffect(() => {\n    retrieveTodoList();\n  }, []);\n\n  \n\n  function retrieveTodoList() {\n    getTodoLists(session.username, session.token)\n      .then((res) => {\n        setTodoLists(res);\n        setList(res);\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  function onDeleteTodoList(id) {\n    //delete the item and update the list\n    deleteTodoList(id, session.token)\n      .then((res) => {\n        retrieveTodoList();\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  function onCreateTodoList() {\n    if (todoList.length == 0) {\n      setError(\"Veuillez mettre un titre valide!\");\n    } else {\n      setError(\"\");\n      createTodoList(session.username, todoList, session.token)\n        .then((res) => {\n          retrieveTodoList();\n          setTodoList(\"\");\n          setError(\"\");\n        })\n        .catch((err) => console.log(err.message));\n    }\n  }\n\n  return (\n    <ImageBackground\n      source={require(\"../assets/bg.jpg\")}\n      style={{ width: \"100%\", height: \"100%\" }}\n    >\n      <Navbar navigation={navigation}/>\n      <View style={styles.container}>\n        <View style={styles.addItemContainer}>\n          <View style={styles.inputGroup}>\n            <TextInput\n              style={styles.input}\n              value={todoList}\n              placeholder=\"Entrer une nouvelle liste\"\n              onChangeText={(value) => {\n                setTodoList(value);\n              }}\n            />\n            <Button title=\"AJOUTER\" style={styles.buttonAdd} onPress={onCreateTodoList} />\n          </View>\n          <Text style={{ color: \"red\" }}>{error}</Text>\n        </View>\n\n        <View style={styles.descriptionContainer}>\n          {list != [] ? (\n            <FlatList\n              style={{ paddingLeft: 10 }}\n              data={todoLists}\n              horizontal={true}\n              contentContainerStyle={styles.listContents}\n              renderItem={({ item }) => (\n                <TodoList\n                  todoList={item}\n                  onDeleteTodoList={onDeleteTodoList}\n                  navigationProp={navigation}\n                />\n              )}\n            />\n          ) : (\n            <Text style={styles.description}>Liste de tâches vide</Text>\n          )}\n        </View>\n      </View>\n    </ImageBackground>\n      );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n\n  descriptionContainer: {\n    display: \"flex\",\n  },\n\n  description: {\n    fontSize: 20,\n  },\n\n  addItemContainer: {\n    padding: 30,\n    width: \"100%\",\n\n\n  },\n\n  inputGroup: {\n    width: \"100%\",\n    flexDirection: \"row\",\n\n  },\n\n  input: {\n    flex:0.8,\n    padding: 10,\n    fontSize: 16,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    marginRight: 5\n    \n  },\n\n\n  listContents: {\n    flexDirection: 'row',\n    width: '100%',\n    flexWrap: 'wrap',\n  },\n\n  buttonAdd: {\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}