{"ast":null,"code":"import React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ArrowLeftCircle, Trash2, Trash } from \"react-native-feather\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoList(props) {\n  var _props$todoList = props.todoList,\n    title = _props$todoList.title,\n    username = _props$todoList.username,\n    id = _props$todoList.id;\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      props.navigationProp.navigate(\"Todolists\", {\n        screen: \"TasksScreen\",\n        params: {\n          id: id,\n          title: title,\n          username: username,\n          onDeleteTodoList: props.onDeleteTodoList\n        }\n      });\n    },\n    children: _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Image, {\n        source: require(\"../assets/clipboard.png\"),\n        style: {\n          height: 50,\n          width: 50\n        }\n      }), _jsx(Text, {\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        style: styles.header,\n        children: title\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  card: {\n    width: 350,\n    height: 150,\n    backgroundColor: \"white\",\n    paddingVertical: 30,\n    paddingHorizontal: 30,\n    textAlign: \"center\",\n    borderRadius: 10,\n    margin: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: \"600\",\n    marginTop: 15,\n    marginLeft: 12,\n    textTransform: \"uppercase\"\n  }\n});","map":{"version":3,"names":["React","useState","Image","View","Text","StyleSheet","Switch","TouchableOpacity","ArrowLeftCircle","Trash2","Trash","jsx","_jsx","jsxs","_jsxs","TodoList","props","_props$todoList","todoList","title","username","id","onPress","navigationProp","navigate","screen","params","onDeleteTodoList","children","style","styles","card","source","require","height","width","numberOfLines","ellipsizeMode","header","create","backgroundColor","paddingVertical","paddingHorizontal","textAlign","borderRadius","margin","flexDirection","alignItems","fontSize","fontWeight","marginTop","marginLeft","textTransform"],"sources":["/home/21901741/Documents/blank_sans_md/Components/TodoList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Image,\n  View,\n  Text,\n  StyleSheet,\n  Switch,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport { ArrowLeftCircle, Trash2, Trash } from \"react-native-feather\";\n\nexport default function TodoList(props) {\n  const { title, username, id } = props.todoList;\n\n  return (\n    <TouchableOpacity\n\n        onPress={() => {\n          props.navigationProp.navigate(\"Todolists\", {\n            screen: \"TasksScreen\",\n            params: {\n              id,\n              title,\n              username,\n              onDeleteTodoList: props.onDeleteTodoList\n            },\n          });\n        }}\n      >\n        <View style={styles.card}>\n         <Image\n              source={require(\"../assets/clipboard.png\")}\n              style={{ height: 50, width: 50}}\n          />\n        <Text numberOfLines={1} ellipsizeMode=\"tail\" style={styles.header}>{title}</Text>\n        </View>\n\n      </TouchableOpacity>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    width: 350,\n    height: 150,\n    backgroundColor: \"white\",\n    paddingVertical: 30,\n    paddingHorizontal: 30,\n    textAlign: \"center\",\n    borderRadius: 10,\n    margin: 20,\n    flexDirection: \"row\", \n    alignItems: \"center\"\n  },\n\n  header: {\n    fontSize: 30,\n    fontWeight: \"600\",\n    marginTop:15,\n    marginLeft: 12,\n    textTransform: \"uppercase\"\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,gBAAA;AAUxC,SAASC,eAAe,EAAEC,MAAM,EAAEC,KAAK,QAAQ,sBAAsB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtE,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EACtC,IAAAC,eAAA,GAAgCD,KAAK,CAACE,QAAQ;IAAtCC,KAAK,GAAAF,eAAA,CAALE,KAAK;IAAEC,QAAQ,GAAAH,eAAA,CAARG,QAAQ;IAAEC,EAAE,GAAAJ,eAAA,CAAFI,EAAE;EAE3B,OACET,IAAA,CAACL,gBAAgB;IAEbe,OAAO,EAAE,SAAAA,QAAA,EAAM;MACbN,KAAK,CAACO,cAAc,CAACC,QAAQ,CAAC,WAAW,EAAE;QACzCC,MAAM,EAAE,aAAa;QACrBC,MAAM,EAAE;UACNL,EAAE,EAAFA,EAAE;UACFF,KAAK,EAALA,KAAK;UACLC,QAAQ,EAARA,QAAQ;UACRO,gBAAgB,EAAEX,KAAK,CAACW;QAC1B;MACF,CAAC,CAAC;IACJ,CAAE;IAAAC,QAAA,EAEFd,KAAA,CAACX,IAAI;MAAC0B,KAAK,EAAEC,MAAM,CAACC,IAAK;MAAAH,QAAA,GACxBhB,IAAA,CAACV,KAAK;QACD8B,MAAM,EAAEC,OAAO,0BAA0B,CAAE;QAC3CJ,KAAK,EAAE;UAAEK,MAAM,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAE;MAAE,CACnC,CAAC,EACJvB,IAAA,CAACR,IAAI;QAACgC,aAAa,EAAE,CAAE;QAACC,aAAa,EAAC,MAAM;QAACR,KAAK,EAAEC,MAAM,CAACQ,MAAO;QAAAV,QAAA,EAAET;MAAK,CAAO,CAAC;IAAA,CAC3E;EAAC,CAES,CAAC;AAGzB;AAEA,IAAMW,MAAM,GAAGzB,UAAU,CAACkC,MAAM,CAAC;EAC/BR,IAAI,EAAE;IACJI,KAAK,EAAE,GAAG;IACVD,MAAM,EAAE,GAAG;IACXM,eAAe,EAAE,OAAO;IACxBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EAEDT,MAAM,EAAE;IACNU,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAC,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE;EACjB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}